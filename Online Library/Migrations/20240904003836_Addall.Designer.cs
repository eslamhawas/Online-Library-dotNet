// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Library.Data;

#nullable disable

namespace Online_Library.Migrations
{
    [DbContext(typeof(OnlineLibraryContext))]
    [Migration("20240904003836_Addall")]
    partial class Addall
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Online_Library.Models.Book", b =>
                {
                    b.Property<string>("Isbn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("RackNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("StockNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Isbn")
                        .HasName("PK__Books__447D36EB41D29538");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Online_Library.Models.BorrowedBook", b =>
                {
                    b.Property<int?>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("OrderNumber"));

                    b.Property<string>("BookIsbn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BookISBN");

                    b.Property<DateOnly?>("DateOfReturn")
                        .HasColumnType("date");

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderNumber")
                        .HasName("PK__Borrowed__CAC5E742E2444D8A");

                    b.HasIndex("BookIsbn");

                    b.HasIndex("UserId");

                    b.ToTable("BorrowedBooks");
                });

            modelBuilder.Entity("Online_Library.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PassordSalt")
                        .HasMaxLength(1000)
                        .HasColumnType("varbinary(1000)");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(1000)
                        .HasColumnType("varbinary(1000)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Online_Library.Models.BorrowedBook", b =>
                {
                    b.HasOne("Online_Library.Models.Book", "BookIsbnNavigation")
                        .WithMany()
                        .HasForeignKey("BookIsbn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BorrowedB__BookI__49C3F6B7");

                    b.HasOne("Online_Library.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BorrowedB__UserI__4AB81AF0");

                    b.Navigation("BookIsbnNavigation");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
